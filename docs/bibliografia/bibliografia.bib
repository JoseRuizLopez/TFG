
@misc{noauthor_early_2024,
	title = {Early {Stopping} on {Validation} {Loss} or on {Accuracy}?},
	url = {https://www.geeksforgeeks.org/early-stopping-on-validation-loss-or-on-accuracy/},
	abstract = {A Computer Science portal for geeks. It contains well written, well thought and well explained computer science and programming articles, quizzes and practice/competitive programming/company interview Questions.},
	language = {es},
	urldate = {2024-10-08},
	journal = {GeeksforGeeks},
	month = feb,
	year = {2024},
	note = {Section: AI-ML-DS},
	file = {Snapshot:/home/jose-ruiz/Zotero/storage/UJ9QQJFV/early-stopping-on-validation-loss-or-on-accuracy.html:text/html},
}

@misc{noauthor_torchcuda_nodate,
	title = {torch.cuda — {PyTorch} 2.4 documentation},
	url = {https://pytorch.org/docs/stable/cuda.html},
	urldate = {2024-10-08},
	file = {torch.cuda — PyTorch 2.4 documentation:/home/jose-ruiz/Zotero/storage/ASR58EE9/cuda.html:text/html},
}

@misc{noauthor_cublas_nodate,
	title = {{cuBLAS}},
	url = {https://docs.nvidia.com/cuda/cublas/index.html#cublasApi_reproducibility},
	urldate = {2024-10-14},
	annote = {Página donde explica el error para usar algoritmos deterministas: Variable.\_execution\_engine.run\_backward(  \# Calls into the C++ engine to run the backward pass
RuntimeError: Deterministic behavior was enabled with either `torch.use\_deterministic\_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA {\textgreater}= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS\_WORKSPACE\_CONFIG=:4096:8 or CUBLAS\_WORKSPACE\_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html\#cublasApi\_reproducibility

},
	file = {cuBLAS:/home/jose-ruiz/Zotero/storage/WXK7R9SJ/index.html:text/html},
}

@book{chacon_pro_2014,
	address = {New York},
	edition = {Second},
	title = {Pro {Git}},
	isbn = {978-1-4842-0076-6},
	url = {https://git-scm.com/book/en/v2},
	abstract = {Pro Git (Second Edition) is your fully-updated guide to Git and its usage in the modern world. Git has come a long way since it was first developed by Linus Torvalds for Linux kernel development. It has taken the open source world by storm since its inception in 2005, and this book teaches you how to use it like a pro. Effective and well-implemented version control is a necessity for successful web projects, whether large or small. With this book you’ll learn how to master the world of distributed version workflow, use the distributed features of Git to the full, and extend Git to meet your every need. Written by Git pros Scott Chacon and Ben Straub, Pro Git (Second Edition) builds on the hugely successful first edition, and is now fully updated for Git version 2.0, as well as including an indispensable chapter on GitHub. It’s the best book for all your Git needs.},
	language = {English},
	publisher = {Apress},
	author = {Chacon, Scott and Straub, Ben},
	year = {2014},
	doi = {10.1007/978-1-4842-0076-6},
	keywords = {git version-control},
}

@book{vanderplas_python_2016,
	title = {Python {Data} {Science} {Handbook}: {Essential} {Tools} for {Working} with {Data}},
	isbn = {978-1-4919-1214-0},
	shorttitle = {Python {Data} {Science} {Handbook}},
	url = {https://books.google.es/books?hl=es&lr=&id=xYmNDQAAQBAJ&oi=fnd&pg=PR2&dq=Python+Data+Science+Handbook&ots=Xs9Rj3qj-M&sig=f5K5ixzKjH7pc2Uo2IYW9jrPNI8#v=onepage&q=Python%20Data%20Science%20Handbook&f=false},
	abstract = {For many researchers, Python is a first-class tool mainly because of its libraries for storing, manipulating, and gaining insight from data. Several resources exist for individual pieces of this data science stack, but only with the Python Data Science Handbook do you get them all—IPython, NumPy, Pandas, Matplotlib, Scikit-Learn, and other related tools.Working scientists and data crunchers familiar with reading and writing Python code will find this comprehensive desk reference ideal for tackling day-to-day issues: manipulating, transforming, and cleaning data; visualizing different types of data; and using data to build statistical or machine learning models. Quite simply, this is the must-have reference for scientific computing in Python.With this handbook, you’ll learn how to use:IPython and Jupyter: provide computational environments for data scientists using PythonNumPy: includes the ndarray for efficient storage and manipulation of dense data arrays in PythonPandas: features the DataFrame for efficient storage and manipulation of labeled/columnar data in PythonMatplotlib: includes capabilities for a flexible range of data visualizations in PythonScikit-Learn: for efficient and clean Python implementations of the most important and established machine learning algorithms},
	language = {en},
	publisher = {"O'Reilly Media, Inc."},
	author = {VanderPlas, Jake},
	month = nov,
	year = {2016},
	note = {Google-Books-ID: xYmNDQAAQBAJ},
	keywords = {Computers / Data Science / Data Modeling \& Design, Computers / Data Science / Data Visualization, Computers / Languages / General, Computers / Languages / Python, Computers / Programming / Open Source, Science / Research \& Methodology},
}

@incollection{ketkar_introduction_2021,
	address = {Berkeley, CA},
	title = {Introduction to {PyTorch}},
	isbn = {978-1-4842-5364-9},
	url = {https://doi.org/10.1007/978-1-4842-5364-9_2},
	abstract = {The recent years have witnessed major releases of frameworks and tools to democratize deep learning to the masses. Today, we have a plethora of options at our disposal. A few popular names include PyTorch, TensorFlow, Keras, and MXNet—the list is never-ending. This chapter aims to provide an overview of PyTorch. We will be using PyTorch extensively throughout the book for implementing deep learning examples. Note that this chapter is not a comprehensive guide for PyTorch, so you should consult the additional materials suggested in the chapter for a deeper understanding of the framework. A basic overview will be offered and the necessary additions to the topic will be provided in the course of the examples implemented later in the book.},
	booktitle = {Deep {Learning} with {Python}: {Learn} {Best} {Practices} of {Deep} {Learning} {Models} with {PyTorch}},
	publisher = {Apress},
	author = {Ketkar, Nikhil and Moolayil, Jojo},
	year = {2021},
	doi = {10.1007/978-1-4842-5364-9_2},
	pages = {27--91},
}

@incollection{kramer_scikit-learn_2016,
	address = {Cham},
	title = {Scikit-{Learn}},
	isbn = {978-3-319-33383-0},
	url = {https://doi.org/10.1007/978-3-319-33383-0_5},
	abstract = {scikit-learn is an open source machine learning library written in Python.},
	booktitle = {Machine {Learning} for {Evolution} {Strategies}},
	publisher = {Springer International Publishing},
	author = {Kramer, Oliver},
	year = {2016},
	doi = {10.1007/978-3-319-33383-0_5},
	pages = {45--53},
}

@misc{noauthor_polars_nodate,
	title = {Polars — {Python} {API} reference},
	url = {https://docs.pola.rs/api/python/stable/reference/},
	urldate = {2024-10-15},
	file = {Python API reference — Polars documentation:/home/jose-ruiz/Zotero/storage/37M8UM6R/reference.html:text/html},
}

@misc{noauthor_rock_nodate,
	title = {Rock {Paper} {Scissors} {Dataset}},
	url = {https://public.roboflow.com/classification/rock-paper-scissors},
	abstract = {Download 2925 free images labeled for classification.},
	urldate = {2024-10-15},
	journal = {Roboflow},
	file = {Snapshot:/home/jose-ruiz/Zotero/storage/77ABQAP8/rock-paper-scissors.html:text/html},
}

@misc{noauthor_resnet50_nodate,
	title = {{ResNet50}},
	url = {https://pytorch.org/hub/nvidia_deeplearningexamples_resnet50/},
	abstract = {Model Description},
	language = {en},
	urldate = {2024-10-15},
	journal = {PyTorch},
	file = {Snapshot:/home/jose-ruiz/Zotero/storage/9KSQM39S/nvidia_deeplearningexamples_resnet50.html:text/html},
}

@misc{noauthor_ley_2024,
	title = {Ley de {Inteligencia} {Artificial}},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://es.wikipedia.org/w/index.php?title=Ley_de_Inteligencia_Artificial&oldid=162300059},
	abstract = {La Ley de Inteligencia Artificial es un reglamento[3]​ que fue aprobado por el Parlamento Europeo el 13 de marzo de 2024 y entró en vigor el 1 de agosto de 2024.[4]​ Fue propuesto el 21 de abril de 2021 por la Comisión Europea con el objetivo es introducir un marco normativo y jurídico único para los sistemas de inteligencia artificial que operen en la Unión Europea.[5]​ Se trata de la primera ley en el mundo sobre inteligencia artificial, que pretende mitigar los riesgos que supone para la seguridad europea, y los derechos fundamentales de los ciudadanos de la Unión. Su ámbito de aplicación abarca todos los sectores (excepto el militar) y todos los tipos de inteligencia artificial. Como reglamento de productos, la propuesta no confiere derechos a los particulares, sino que regula y supervisa a los proveedores de sistemas de inteligencia artificial y a las entidades que hacen uso de ellos a título profesional. 
El reglamento propuesto clasifica las aplicaciones de inteligencia artificial en función de su riesgo y las regula en consecuencia. Las aplicaciones de bajo riesgo no se regulan en absoluto, ya que los Estados miembros, gracias a la armonización máxima, no pueden regularlas en mayor medida y no se aplican las leyes nacionales vigentes relativas a la regulación del diseño o el uso de tales sistemas.[6]​ Se prevé un código de conducta voluntario para estos sistemas de bajo riesgo, aunque no estará presente desde el principio. Los sistemas de riesgo medio y alto requerirían una evaluación obligatoria de la conformidad, realizada como autoevaluación por el proveedor, antes de su comercialización. En el caso de algunas aplicaciones especialmente críticas que ya requieren una evaluación de la conformidad supervisada en virtud de la legislación comunitaria vigente, por ejemplo en el caso de los productos sanitarios, la autoevaluación del proveedor con arreglo a los requisitos de la Ley AI sería examinada por el organismo notificado que realice la evaluación en virtud de esa normativa, como el reglamento sobre los productos sanitarios.
La propuesta también impondría prohibiciones a determinados tipos de aplicaciones, a saber, el reconocimiento biométrico a distancia, las aplicaciones que manipulan subliminalmente a las personas, las aplicaciones que explotan vulnerabilidades de determinados grupos de forma perjudicial y la evaluación social. Para las tres primeras se propone un régimen de autorización en el contexto de la aplicación de la ley, pero la evaluación social se prohibiría por completo.[7]​
La ley también propone la introducción de una Junta Europea de inteligencia artificial que fomentará la cooperación nacional y garantizará que se respete la regulación.[8]​
Al igual que el Reglamento General de Protección de Datos (RGPD), la Ley de IA podría convertirse en una referencia mundial para otros países que quieran legislar sobre la inteligencia artificial.[9]​ Ya está teniendo impacto más allá de Europa; en septiembre de 2021, el Congreso de Brasil aprobó un proyecto de ley que crea un marco legal para la inteligencia artificial.[10]​
El Consejo de la Unión Europea adoptó su orientación general sobre la Ley de IA el 6 de diciembre de 2022.[11]​ Alemania apoya la posición del Consejo, pero sigue considerando que es necesario introducir algunas mejoras, tal como se formula en una declaración adjunta del Estado miembro.[12]​},
	language = {es},
	urldate = {2024-10-15},
	journal = {Wikipedia, la enciclopedia libre},
	month = sep,
	year = {2024},
	note = {Page Version ID: 162300059},
	file = {Snapshot:/home/jose-ruiz/Zotero/storage/NR68FFEU/Ley_de_Inteligencia_Artificial.html:text/html},
}

@article{alnuaim_human-computer_2022,
	title = {Human-{Computer} {Interaction} with {Hand} {Gesture} {Recognition} {Using} {ResNet} and {MobileNet}},
	volume = {2022},
	issn = {1687-5273},
	url = {https://onlinelibrary.wiley.com/doi/abs/10.1155/2022/8777355},
	doi = {10.1155/2022/8777355},
	abstract = {Sign language is the native language of deaf people, which they use in their daily life, and it facilitates the communication process between deaf people. The problem faced by deaf people is targeted using sign language technique. Sign language refers to the use of the arms and hands to communicate, particularly among those who are deaf. This varies depending on the person and the location from which they come. As a result, there is no standardization about the sign language to be used; for example, American, British, Chinese, and Arab sign languages are all distinct. Here, in this study we trained a model, which will be able to classify the Arabic sign language, which consists of 32 Arabic alphabet sign classes. In images, sign language is detected through the pose of the hand. In this study, we proposed a framework, which consists of two CNN models, and each of them is individually trained on the training set. The final predictions of the two models were ensembled to achieve higher results. The dataset used in this study is released in 2019 and is called as ArSL2018. It is launched at the Prince Mohammad Bin Fahd University, Al Khobar, Saudi Arabia. The main contribution in this study is resizing the images to 64 ∗ 64 pixels, converting from grayscale images to three-channel images, and then applying the median filter to the images, which acts as lowpass filtering in order to smooth the images and reduce noise and to make the model more robust to avoid overfitting. Then, the preprocessed image is fed into two different models, which are ResNet50 and MobileNetV2. ResNet50 and MobileNetV2 architectures were implemented together. The results we achieved on the test set for the whole data are with an accuracy of about 97\% after applying many preprocessing techniques and different hyperparameters for each model, and also different data augmentation techniques.},
	language = {en},
	number = {1},
	urldate = {2024-10-15},
	journal = {Computational Intelligence and Neuroscience},
	author = {Alnuaim, Abeer and Zakariah, Mohammed and Hatamleh, Wesam Atef and Tarazi, Hussam and Tripathi, Vikas and Amoatey, Enoch Tetteh},
	year = {2022},
	note = {\_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1155/2022/8777355},
	pages = {8777355},
	file = {Full Text PDF:/home/jose-ruiz/Zotero/storage/TIW5WFUC/Alnuaim et al. - 2022 - Human-Computer Interaction with Hand Gesture Recognition Using ResNet and MobileNet.pdf:application/pdf;Snapshot:/home/jose-ruiz/Zotero/storage/CV3ZZCAY/8777355.html:text/html},
}

@article{zhao_review_2024,
	title = {A review of convolutional neural networks in computer vision},
	volume = {57},
	issn = {1573-7462},
	url = {https://doi.org/10.1007/s10462-024-10721-6},
	doi = {10.1007/s10462-024-10721-6},
	abstract = {In computer vision, a series of exemplary advances have been made in several areas involving image classification, semantic segmentation, object detection, and image super-resolution reconstruction with the rapid development of deep convolutional neural network (CNN). The CNN has superior features for autonomous learning and expression, and feature extraction from original input data can be realized by means of training CNN models that match practical applications. Due to the rapid progress in deep learning technology, the structure of CNN is becoming more and more complex and diverse. Consequently, it gradually replaces the traditional machine learning methods. This paper presents an elementary understanding of CNN components and their functions, including input layers, convolution layers, pooling layers, activation functions, batch normalization, dropout, fully connected layers, and output layers. On this basis, this paper gives a comprehensive overview of the past and current research status of the applications of CNN models in computer vision fields, e.g., image classification, object detection, and video prediction. In addition, we summarize the challenges and solutions of the deep CNN, and future research directions are also discussed.},
	language = {en},
	number = {4},
	urldate = {2024-10-15},
	journal = {Artificial Intelligence Review},
	author = {Zhao, Xia and Wang, Limin and Zhang, Yufei and Han, Xuming and Deveci, Muhammet and Parmar, Milan},
	month = mar,
	year = {2024},
	keywords = {Artificial Intelligence, Computer vision, Convolutional neural networks, Deep learning, Status quo review},
	pages = {99},
	file = {Full Text PDF:/home/jose-ruiz/Zotero/storage/BW98MWHI/Zhao et al. - 2024 - A review of convolutional neural networks in computer vision.pdf:application/pdf},
}

@book{sydenham_handbook_2005,
	address = {Chichester},
	title = {Handbook of measuring system design},
	isbn = {978-0-470-02143-9},
	language = {en},
	publisher = {Wiley},
	editor = {Sydenham, Peter H. and Thorn, Richard},
	year = {2005},
	file = {PDF:/home/jose-ruiz/Zotero/storage/AH8FVAYY/Sydenham and Thorn - 2005 - Handbook of measuring system design.pdf:application/pdf},
}

@misc{noauthor_mnist_nodate,
	title = {{MNIST} {Dataset}},
	url = {https://www.kaggle.com/datasets/hojjatk/mnist-dataset},
	abstract = {The MNIST database of handwritten digits (http://yann.lecun.com)},
	language = {en},
	urldate = {2024-10-23},
	file = {Snapshot:/home/jose-ruiz/Zotero/storage/8RXQFZJV/mnist-dataset.html:text/html},
}

@misc{noauthor_salario_nodate,
	title = {Salario para {Data} {Scientist} en {España} - {Salario} {Medio}},
	url = {https://es.talent.com/salary},
	abstract = {Data Scientist en España perciben un salario medio mensual € 3.389. Prueba la herramienta de salarios de Talent.com y descubre cuál es el salario medio de los profesionales de la industria.},
	language = {es-es},
	urldate = {2024-10-24},
	journal = {Talent.com},
	file = {Snapshot:/home/jose-ruiz/Zotero/storage/KKLCEGKW/salary.html:text/html},
}

@book{goodfellow_deep_2016,
	title = {Deep {Learning}},
	publisher = {MIT Press},
	author = {Goodfellow, Ian and Bengio, Yoshua and Courville, Aaron},
	year = {2016},
	annote = {http://www.deeplearningbook.org},
}

@article{lecun_deep_2015,
	title = {Deep learning},
	volume = {521},
	issn = {1476-4687},
	url = {https://doi.org/10.1038/nature14539},
	doi = {10.1038/nature14539},
	abstract = {Deep learning allows computational models that are composed of multiple processing layers to learn representations of data with multiple levels of abstraction. These methods have dramatically improved the state-of-the-art in speech recognition, visual object recognition, object detection and many other domains such as drug discovery and genomics. Deep learning discovers intricate structure in large data sets by using the backpropagation algorithm to indicate how a machine should change its internal parameters that are used to compute the representation in each layer from the representation in the previous layer. Deep convolutional nets have brought about breakthroughs in processing images, video, speech and audio, whereas recurrent nets have shone light on sequential data such as text and speech.},
	number = {7553},
	journal = {Nature},
	author = {LeCun, Yann and Bengio, Yoshua and Hinton, Geoffrey},
	month = may,
	year = {2015},
	pages = {436--444},
}

@article{moscato_evolution_2000,
	title = {On {Evolution}, {Search}, {Optimization}, {Genetic} {Algorithms} and {Martial} {Arts} - {Towards} {Memetic} {Algorithms}},
	journal = {Caltech Concurrent Computation Program},
	author = {Moscato, Pablo},
	month = oct,
	year = {2000},
}

@article{shorten_survey_2019,
	title = {A survey on {Image} {Data} {Augmentation} for {Deep} {Learning}},
	volume = {6},
	issn = {2196-1115},
	url = {https://doi.org/10.1186/s40537-019-0197-0},
	doi = {10.1186/s40537-019-0197-0},
	abstract = {Deep convolutional neural networks have performed remarkably well on many Computer Vision tasks. However, these networks are heavily reliant on big data to avoid overfitting. Overfitting refers to the phenomenon when a network learns a function with very high variance such as to perfectly model the training data. Unfortunately, many application domains do not have access to big data, such as medical image analysis. This survey focuses on Data Augmentation, a data-space solution to the problem of limited data. Data Augmentation encompasses a suite of techniques that enhance the size and quality of training datasets such that better Deep Learning models can be built using them. The image augmentation algorithms discussed in this survey include geometric transformations, color space augmentations, kernel filters, mixing images, random erasing, feature space augmentation, adversarial training, generative adversarial networks, neural style transfer, and meta-learning. The application of augmentation methods based on GANs are heavily covered in this survey. In addition to augmentation techniques, this paper will briefly discuss other characteristics of Data Augmentation such as test-time augmentation, resolution impact, final dataset size, and curriculum learning. This survey will present existing methods for Data Augmentation, promising developments, and meta-level decisions for implementing Data Augmentation. Readers will understand how Data Augmentation can improve the performance of their models and expand limited datasets to take advantage of the capabilities of big data.},
	number = {1},
	journal = {Journal of Big Data},
	author = {Shorten, Connor and Khoshgoftaar, Taghi M.},
	month = jul,
	year = {2019},
	pages = {60},
}

@inproceedings{he_deep_2016,
	title = {Deep {Residual} {Learning} for {Image} {Recognition}},
	doi = {10.1109/CVPR.2016.90},
	booktitle = {2016 {IEEE} {Conference} on {Computer} {Vision} and {Pattern} {Recognition} ({CVPR})},
	author = {He, Kaiming and Zhang, Xiangyu and Ren, Shaoqing and Sun, Jian},
	year = {2016},
	keywords = {Complexity theory, Degradation, Image recognition, Image segmentation, Neural networks, Training, Visualization},
	pages = {770--778},
}

@book{goldberg_genetic_1989,
	series = {Addison {Wesley} series in artificial intelligence},
	title = {Genetic {Algorithms} in {Search}, {Optimization}, and {Machine} {Learning}},
	isbn = {978-0-201-15767-3},
	url = {https://books.google.es/books?id=2IIJAAAACAAJ},
	publisher = {Addison-Wesley},
	author = {Goldberg, D.E.},
	year = {1989},
	lccn = {lc88006276},
}

@inproceedings{dong_memetic_2020,
	title = {A {Memetic} {Algorithm} for {Evolving} {Deep} {Convolutional} {Neural} {Network} in {Image} {Classification}},
	doi = {10.1109/SSCI47803.2020.9308162},
	author = {Dong, Junwei and Zhang, Liangjie and Hou, Boyu and Feng, Liang},
	month = dec,
	year = {2020},
	pages = {2663--2669},
}

@book{neri_handbook_2012,
	address = {Berlin, Heidelberg},
	series = {Studies in {Computational} {Intelligence}},
	title = {Handbook of {Memetic} {Algorithms}},
	volume = {379},
	copyright = {http://www.springer.com/tdm},
	isbn = {978-3-642-23246-6 978-3-642-23247-3},
	url = {http://link.springer.com/10.1007/978-3-642-23247-3},
	language = {en},
	urldate = {2024-10-27},
	publisher = {Springer},
	editor = {Neri, Ferrante and Cotta, Carlos and Moscato, Pablo and Kacprzyk, Janusz},
	year = {2012},
	doi = {10.1007/978-3-642-23247-3},
	keywords = {Computational Intelligence, Memetic Algorithms, Memetic Computing},
}

@book{holland_adaptation_1975,
	title = {Adaptation in {Natural} and {Artificial} {Systems}: {An} {Introductory} {Analysis} with {Applications} to {Biology}, {Control}, and {Artificial} {Intelligence}},
	isbn = {978-0-472-08460-9},
	url = {https://books.google.es/books?id=YE5RAAAAMAAJ},
	publisher = {University of Michigan Press},
	author = {Holland, J.H.},
	year = {1975},
	lccn = {lc74078988},
}

@book{weidman_deep_2019,
	title = {Deep {Learning} from {Scratch}: {Building} with {Python} from {First} {Principles}},
	isbn = {978-1-4920-4141-2},
	url = {https://books.google.es/books?id=PRSCwwEACAAJ},
	publisher = {O'Reilly Media, Incorporated},
	author = {Weidman, S.},
	year = {2019},
	lccn = {2020301331},
}

@misc{noauthor_original_nodate,
	title = {({Original}) {Art} {Images}: {Drawing}/{Painting}/{Sculptures}/{Engravings}},
	shorttitle = {Art {Images}},
	url = {https://www.kaggle.com/datasets/thedownhill/art-images-drawings-painting-sculpture-engraving},
	abstract = {Dataset with about 9000 images containing 5 types of arts},
	language = {en},
	urldate = {2025-02-23},
	file = {Snapshot:/home/jose-ruiz/Zotero/storage/QBQZXW7J/art-images-drawings-painting-sculpture-engraving.html:text/html},
}

@misc{noauthor_cleaned_nodate,
	title = {({Cleaned}) {Art} {Images}: {Drawing}/{Painting}/{Sculptures}/{Engravings}},
	shorttitle = {Art {Images}},
	url = {https://www.kaggle.com/datasets/moosecat/art-images-drawings-painting-sculpture-engraving},
	abstract = {Dataset with about 9000 images containing 5 types of arts},
	language = {en},
	urldate = {2025-02-23},
	file = {Snapshot:/home/jose-ruiz/Zotero/storage/ZYYUB3QV/data.html:text/html},
}
